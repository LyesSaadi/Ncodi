@{

}
<link href="~/css/playground.css" rel="stylesheet" />
<style>
    .codeflask {
        width: 50% !important;
        /* height: 50%; */
        position: absolute !important;
        top: 50%;
        /* left: 50%; */
        transform: translateY(-50%) !important;
        /* display: block; */
    }
    .run {
        position: absolute !important;
        left: 50% !important;
        z-index:90;
    }
    #BtnStart {
        position: absolute !important;
        left: 60% !important;
        z-index: 90;
    }

    .output {
        position: absolute !important;
        left: 50% !important;
        height: 100%;
        width: 50%;
        background: #272822 !important;
        font-size: 1rem !important;
        line-height: 1.5 !important;
        color: #f8f8f2 !important;
    }
</style>
<div id="code-editor">

</div>
<script src="https://unpkg.com/codeflask/build/codeflask.min.js"></script>

<script>
    const flask = new CodeFlask('#code-editor', {defaultTheme: false, lineNumbers: true });
</script>
<link href="~/css/prism.css" rel="stylesheet" />

<input type="button" class="run" value="Run Code" />
<input type="button" id ="BtnStart" value="Run Socket" />
<pre class="output"></pre>
<script>
    const runBtn = document.querySelector(".run");
    const output = document.querySelector(".output");
    const codeField = document.querySelector(".codeflask__code");
    runBtn.addEventListener("click", runCode);
    function runCode() {
        console.log(flask.getCode().split(/\n/));
        var xhr = new XMLHttpRequest();
        xhr.open("POST", "/api/editor/run", true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(JSON.stringify({
            lines: flask.getCode().split(/\n/),
            filename: "file"
        }));
        xhr.onload = function () {
            console.log(this.responseText);
            var data = JSON.parse(this.responseText);
            console.log(data);
            output.innerHTML = ""
            for (const element of data) {
                output.innerHTML += element;
                output.innerHTML += "<br>";
            }
        }
    }
    const strReg = /"(.*?)"/g
    const keywordReg = /\b(true|false|const|var|if|else|while|for|to|do|def|break|continue|return|madem|kan|wela|dir|yezzi|kamel|s7i7|ghalet|men|ila|raje3)(?=[^\w])/g
    flask.onUpdate((code) => {
        let htmlCode = code + " ";
        htmlCode = htmlCode.replace(strReg, '<span class="token string">"$1"</span>')
        htmlCode = htmlCode.replace(keywordReg, '<span class="token keyword">$1</span>')
        codeField.innerHTML = htmlCode;
    });


    var btnStart = document.getElementById("BtnStart");
    btnStart.addEventListener("click", function (e) {
        e.preventDefault();

        var protocol = location.protocol === "https:" ? "wss:" : "ws:";
        var wsUri = protocol + "//" + window.location.host;
        var socket = new WebSocket(wsUri);
        socket.onopen = e => {
            console.log("socket opened", e);
            socket.send(flask.getCode().split(/\n/));
        };

        socket.onclose = function (e) {
            console.log("socket closed", e);
        };

        socket.onmessage = function (e) {
            if (e.data === "send data")
                socket.send("aziz");
            else
                console.log(e);
        };

        socket.onerror = function (e) {
            console.error(e.data);
        };
    });

</script>